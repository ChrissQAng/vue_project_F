<script setup>
import { ref, onMounted, computed } from 'vue'
import { format } from 'date-fns'

const backendUrl = 'http://localhost:3000'

const data = ref([])

const configmode = ref(false)
const configchannel = ref(1) // Sensor #, not channel
const configdata = ref([])

const updateM = async (channel, value) => {
  const response = await fetch(backendUrl + '/set?ch=' + channel + '&m=' + (value ? '1' : '0'))
}

const updateFt = async () => {
  const response = await fetch(backendUrl + '/data?ch=' + configchannel.value + ',' + (configchannel.value + 1) + '&type=ft')
  const json = await response.json()
  if(configmode.value) {
    configdata.value = [ json[0]['ft'], json[1]['ft'] ]
    setTimeout(updateFt, 1000)
  }
}

const startSetupMode = (channel) => {
  configmode.value = true
  configchannel.value = channel
  updateM(channel * 2 - 1, 1)
  updateFt()
}

const endSetupMode = () => {
  configmode.value = false
  updateM(configchannel.value * 2 - 1)
}

onMounted(async () => {
  const response = await fetch(backendUrl + '/data')
  // TODO error handling
  const json = await response.json()
  data.value = json
})

const formatDate = (date) => {
  if(date)
    return format(date, 'yyyy-MM-dd HH:mm')
  return ''
}

const calcYII = (f, fm) => {
  let y = 1 - (f / fm)
  return y.toFixed(3)
}

const pairedSensorData = computed(() => {
  let ret = []
  console.log("Data:")
  console.log(data)
  for(let i = 0; i < data.value.length; i += 2) {
    ret.push( { sensorno: (data.value[i].channel + 1) / 2, front: data.value[i], back: data.value[i + 1] } )
  }
  console.log("Return: ")
  console.log(ret)
  return ret
})

</script>

<template>
<div v-if="configmode">
  <div>
    <div @click="endSetupMode">X</div>
    <h2>Setup</h2>
    Sensor: {{ configchannel }}<br>
    Front: {{ configdata[0] }}<br>
    Rear: {{ configdata[1] }}<br>
  </div>
</div>
<div v-else>
  <div v-for="sensor in pairedSensorData" :key="sensor.sensorno">
    <hr>
    Sensor {{ sensor.sensorno }}
    <br>
    <button @click="startSetupMode(sensor.sensorno)">Setup</button>

    <br>
    <br>
    F Measurement:<br>
    ({{ formatDate(sensor.front.ftime) }})<br>
    F Front: {{ sensor.front.f }}
    F Back: {{ sensor.back.f }}
    <br>
    Yield Measurement:<br>
    ({{ formatDate(sensor.front.ytime) }})<br>
    F Front: {{ sensor.front.yf }}<br>
    F Back: {{ sensor.back.yf }}<br>
    Fm Front: {{ sensor.front.yfm }}<br>
    Fm Back: {{ sensor.back.yfm }}<br>
    Y(II) Front: {{ calcYII(sensor.front.yf, sensor.front.yfm) }}<br>
    Y(II) Back: {{ calcYII(sensor.back.yf, sensor.back.yfm) }}<br>
    
  </div>
</div>
<hr>
</template>

<style scoped>
</style>
